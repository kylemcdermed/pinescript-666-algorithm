//@version=5
strategy("Multi-Timeframe 666 MA Strategy", shorttitle="666 Strategy", overlay=true, 
         default_qty_type=strategy.percent_of_equity, default_qty_value=10, 
         pyramiding=2, calc_on_every_tick=true)

// Input for MA type
ma_type = input.string("SMA", title="MA Type", options=["SMA", "EMA", "WMA", "RMA"])

// Function to get MA based on type
get_ma(source, length) =>
    switch ma_type
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "WMA" => ta.wma(source, length)
        "RMA" => ta.rma(source, length)

// Multi-timeframe 666 Moving Averages
ma666_1m = request.security(syminfo.tickerid, "1", get_ma(close, 666), lookahead=barmerge.lookahead_off)
ma666_3m = request.security(syminfo.tickerid, "3", get_ma(close, 666), lookahead=barmerge.lookahead_off)
ma666_5m = request.security(syminfo.tickerid, "5", get_ma(close, 666), lookahead=barmerge.lookahead_off)
ma666_15m = request.security(syminfo.tickerid, "15", get_ma(close, 666), lookahead=barmerge.lookahead_off)

// Plot the MAs
plot(ma666_1m, "1m MA", color.orange, 2)
plot(ma666_3m, "3m MA", color.yellow, 2)
plot(ma666_5m, "5m MA", color.red, 2)
plot(ma666_15m, "15m MA", color.blue, 2)

// Trend Detection
uptrend = ma666_1m > ma666_15m
downtrend = ma666_1m < ma666_15m

// Crossover Detection
m1_cross_m3 = ta.crossover(ma666_1m, ma666_3m)
m1_cross_m5 = ta.crossover(ma666_1m, ma666_5m)

// Position tracking
var float initial_stop = na
var bool trailing_active = false

// ENTRY CONDITIONS
entry_1_condition = uptrend and m1_cross_m3
entry_2_condition = uptrend and m1_cross_m5

// ENTRY LOGIC
if entry_1_condition
    strategy.entry("Long1", strategy.long, qty=1, comment="M1 x M3")
    initial_stop := ma666_15m
    trailing_active := false

if entry_2_condition
    strategy.entry("Long2", strategy.long, qty=1, comment="M1 x M5")
    // Update stop for all positions to M3 level
    initial_stop := ma666_3m
    trailing_active := false

// PROFIT MANAGEMENT
if strategy.position_size > 0
    avg_entry = strategy.position_avg_price
    current_profit = close - avg_entry
    
    // Check if 50+ points profit to activate trailing
    if current_profit >= 50 and not trailing_active
        trailing_active := true
    
    // Determine stop loss level
    stop_level = trailing_active ? ma666_1m : initial_stop
    
    // EXIT STRATEGY
    strategy.exit("Exit Long1", "Long1", stop=stop_level, comment="SL Hit")
    strategy.exit("Exit Long2", "Long2", stop=stop_level, comment="SL Hit")

// DOWNTREND EXIT
if downtrend and strategy.position_size > 0
    strategy.close_all("Downtrend", comment="Trend Change")
    initial_stop := na
    trailing_active := false

// Reset when no position
if strategy.position_size == 0
    initial_stop := na
    trailing_active := false

// Debug info
plotchar(entry_1_condition, "Entry1", "1", location.belowbar, color.green, size=size.small)
plotchar(entry_2_condition, "Entry2", "2", location.belowbar, color.lime, size=size.small)
plotchar(uptrend, "UpTrend", "▲", location.top, color.green, size=size.tiny)
plotchar(downtrend, "DownTrend", "▼", location.top, color.red, size=size.tiny)
